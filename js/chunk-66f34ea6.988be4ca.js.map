{"version":3,"sources":["webpack:///./node_modules/shortid/lib/index.js","webpack:///./node_modules/shortid/lib/random/random-byte-browser.js","webpack:///./src/api/gene.js","webpack:///./node_modules/shortid/lib/build.js","webpack:///./node_modules/shortid/lib/alphabet.js","webpack:///./node_modules/shortid/node_modules/nanoid/format.browser.js","webpack:///./node_modules/shortid/lib/random/random-from-seed.js","webpack:///./src/api/genome.js","webpack:///./src/views/gene/index.vue?6a81","webpack:///./node_modules/shortid/index.js","webpack:///./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack:///./src/views/gene/index.vue","webpack:///src/views/gene/index.vue","webpack:///./src/views/gene/index.vue?06a3","webpack:///./src/views/gene/index.vue?7945","webpack:///./node_modules/shortid/lib/generate.js","webpack:///./node_modules/shortid/lib/is-valid.js"],"names":["alphabet","build","isValid","clusterWorkerId","seed","seedValue","module","exports","worker","workerId","characters","newCharacters","undefined","shuffled","generate","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","push","Math","floor","random","baseUrl","Gene","params","config","method","url","HttpService","request","counter","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","previousSeed","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","setSeed","shuffle","characterIndex","sourceArray","targetArray","r","nextValue","splice","getShuffled","lookup","index","alphabetShuffled","get","mask","log","LN2","step","id","getNextValue","_seed_","Genome","genomeVersionID","render","_vm","this","_c","_self","staticClass","_v","attrs","model","value","genomeID","callback","$$v","expression","_l","genomeList","key","gnome_version_id","gnome_species_name","geneName","on","getPageList","slot","directives","name","rawName","tableLoading","tableData","children","scopedSlots","_u","fn","row","staticStyle","$event","jump","_s","gnome_gene_id","pageInfo","pageNum","pageSize","total","handleCurrentChange","staticRenderFns","shortid","props","components","data","computed","watch","mounted","methods","path","query","genomeGeneID","geneID","res","page","type","showClose","message","getGenome","GenomeApi","addRandomId","child","component","format","number","done","loopCounter","pow","isShortId","nonAlphabetic","RegExp","replace","test"],"mappings":"kHAEA,IAAIA,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAMlBC,EAAkB,EAAQ,SAA+B,EAQ7D,SAASC,EAAKC,GAEV,OADAL,EAASI,KAAKC,GACPC,EAAOC,QASlB,SAASC,EAAOC,GAEZ,OADAN,EAAkBM,EACXH,EAAOC,QAQlB,SAASG,EAAWC,GAKhB,YAJsBC,IAAlBD,GACAX,EAASU,WAAWC,GAGjBX,EAASa,WAOpB,SAASC,IACP,OAAOb,EAAME,GAIfG,EAAOC,QAAUO,EACjBR,EAAOC,QAAQO,SAAWA,EAC1BR,EAAOC,QAAQH,KAAOA,EACtBE,EAAOC,QAAQC,OAASA,EACxBF,EAAOC,QAAQG,WAAaA,EAC5BJ,EAAOC,QAAQL,QAAUA,G,oCC3DzB,IAEIa,EAFAC,EAA2B,kBAAXC,SAAwBA,OAAOD,QAAUC,OAAOC,UAahEH,EATCC,GAAWA,EAAOG,gBASN,SAASC,GAClB,OAAOJ,EAAOG,gBAAgB,IAAIE,WAAWD,KATpC,SAASA,GAElB,IADA,IAAIE,EAAQ,GACHC,EAAI,EAAGA,EAAIH,EAAMG,IACtBD,EAAME,KAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAE/B,OAAOL,GAQfhB,EAAOC,QAAUQ,G,kCCpBjB,kDAEA,MAAMa,EAAU,OAED,MAAMC,EAEnB,eAAeC,GACb,MAAMC,EAAS,CACbC,OAAQ,MACRC,IAAQL,EAAF,WACNE,UAEF,OAAOI,OAAYC,QAAQJ,GAI7B,cAAcD,GACZ,MAAMC,EAAS,CACbC,OAAQ,MACRC,IAAQL,EAAF,UACNE,UAEF,OAAOI,OAAYC,QAAQJ,GAI7B,mBAAmBD,GACjB,MAAMC,EAAS,CACbC,OAAQ,MACRC,IAAQL,EAAF,0BACNE,UAEF,OAAOI,OAAYC,QAAQJ,GAI7B,iBAAiBD,GACf,MAAMC,EAAS,CACbC,OAAQ,MACRC,IAAQL,EAAF,wBACNE,UAEF,OAAOI,OAAYC,QAAQJ,GAI7B,iBAAiBD,GACf,MAAMC,EAAS,CACbC,OAAQ,MACRC,IAAQL,EAAF,wBACNE,UAEF,OAAOI,OAAYC,QAAQJ,GAI7B,kBAAkBD,GAChB,MAAMC,EAAS,CACbC,OAAQ,MACRC,IAAQL,EAAF,yBACNE,UAEF,OAAOI,OAAYC,QAAQJ,GAI7B,gBAAgBD,GACd,MAAMC,EAAS,CACbC,OAAQ,MACRC,IAAQL,EAAF,uBACNE,UAEF,OAAOI,OAAYC,QAAQJ,M,oCCtE/B,IAaIK,EAGAC,EAhBAvB,EAAW,EAAQ,QAMnBwB,GALW,EAAQ,QAKL,eAIdC,EAAU,EAYd,SAAStC,EAAME,GACX,IAAIqC,EAAM,GAENC,EAAUhB,KAAKC,MAAmC,MAA5BgB,KAAKC,MAAQL,IAevC,OAbIG,IAAYJ,EACZD,KAEAA,EAAU,EACVC,EAAkBI,GAGtBD,GAAY1B,EAASyB,GACrBC,GAAY1B,EAASX,GACjBiC,EAAU,IACVI,GAAY1B,EAASsB,IAEzBI,GAAY1B,EAAS2B,GACdD,EAGXlC,EAAOC,QAAUN,G,oCC3CjB,IAGID,EACA4C,EAEA/B,EANAgC,EAAiB,EAAQ,QAEzBC,EAAW,mEAMf,SAASC,IACLlC,GAAW,EAGf,SAASmC,EAAcC,GACnB,GAAKA,GAQL,GAAIA,IAAejD,EAAnB,CAIA,GAAIiD,EAAWC,SAAWJ,EAASI,OAC/B,MAAM,IAAIC,MAAM,uCAAyCL,EAASI,OAAS,qCAAuCD,EAAWC,OAAS,gBAAkBD,GAG5J,IAAIG,EAASH,EAAWI,MAAM,IAAIC,QAAO,SAASC,EAAMC,EAAKC,GAC1D,OAAOD,IAAQC,EAAIC,YAAYH,MAGlC,GAAIH,EAAOF,OACP,MAAM,IAAIC,MAAM,uCAAyCL,EAASI,OAAS,yDAA2DE,EAAOO,KAAK,OAGtJ3D,EAAWiD,EACXF,UAxBQ/C,IAAa8C,IACb9C,EAAW8C,EACXC,KAyBZ,SAASrC,EAAWuC,GAEhB,OADAD,EAAcC,GACPjD,EAGX,SAAS4D,EAAQxD,GACbyC,EAAezC,KAAKA,GAChBwC,IAAiBxC,IACjB2C,IACAH,EAAexC,GAIvB,SAASyD,IACA7D,GACDgD,EAAcF,GAGlB,IAGIgB,EAHAC,EAAc/D,EAASqD,MAAM,IAC7BW,EAAc,GACdC,EAAIpB,EAAeqB,YAGvB,MAAOH,EAAYb,OAAS,EACxBe,EAAIpB,EAAeqB,YACnBJ,EAAiBrC,KAAKC,MAAMuC,EAAIF,EAAYb,QAC5Cc,EAAYxC,KAAKuC,EAAYI,OAAOL,EAAgB,GAAG,IAE3D,OAAOE,EAAYL,KAAK,IAG5B,SAASS,IACL,OAAIvD,IAGJA,EAAWgD,IACJhD,GAQX,SAASwD,EAAOC,GACZ,IAAIC,EAAmBH,IACvB,OAAOG,EAAiBD,GAG5B,SAASE,IACP,OAAOxE,GAAY8C,EAGrBxC,EAAOC,QAAU,CACbiE,IAAKA,EACL9D,WAAYA,EACZN,KAAMwD,EACNS,OAAQA,EACRxD,SAAUuD,I,qBClGd9D,EAAOC,QAAU,SAAUoB,EAAQ3B,EAAUoB,GAM3C,IAAIqD,GAAQ,GAAKhD,KAAKiD,IAAI1E,EAASkD,OAAS,GAAKzB,KAAKkD,KAAO,EAezDC,KAAU,IAAMH,EAAOrD,EAAOpB,EAASkD,QACvC2B,EAAK,GAET,MAAO,EAAM,CACX,IAAIvD,EAAQK,EAAOiD,GAEfrD,EAAIqD,EACR,MAAOrD,IAKL,GAFAsD,GAAM7E,EAASsB,EAAMC,GAAKkD,IAAS,GAE/BI,EAAG3B,UAAY9B,EAAM,OAAOyD,K,oCC/BtC,IAAIzE,EAAO,EAOX,SAAS0E,IAEL,OADA1E,GAAe,KAAPA,EAAc,OAAS,OACxBA,EAAK,OAGhB,SAASwD,EAAQmB,GACb3E,EAAO2E,EAGXzE,EAAOC,QAAU,CACb2D,UAAWY,EACX1E,KAAMwD,I,oCCvBV,kDAEA,MAAMhC,EAAU,SAED,MAAMoD,EAEnB,cACE,MAAMjD,EAAS,CACbC,OAAQ,MACRC,IAAQL,EAAF,SAER,OAAOM,OAAYC,QAAQJ,GAI7B,oBAAoB8C,GAClB,MAAM9C,EAAS,CACbC,OAAQ,MACRC,IAAM,GAAEL,kCAAwCiD,KAElD,OAAO3C,OAAYC,QAAQJ,GAI7B,wBAAwB8C,GACtB,MAAM9C,EAAS,CACbC,OAAQ,MACRC,IAAQL,EAAF,iBACNE,OAAQ,CACNmD,gBAAiBJ,IAGrB,OAAO3C,OAAYC,QAAQJ,M,oCChC/B,W,oCCCAzB,EAAOC,QAAU,EAAQ,S,oCCCzBD,EAAOC,QAAU,G,yCCFjB,IAAI2E,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,MAAM,CAACE,YAAY,eAAe,CAACF,EAAG,OAAO,CAACF,EAAIK,GAAG,WAAWH,EAAG,YAAY,CAACI,MAAM,CAAC,WAAa,GAAG,UAAY,GAAG,KAAO,SAAS,YAAc,OAAOC,MAAM,CAACC,MAAOR,EAAIS,SAAUC,SAAS,SAAUC,GAAMX,EAAIS,SAASE,GAAKC,WAAW,aAAaZ,EAAIa,GAAIb,EAAIc,YAAY,SAAS1C,GAAM,OAAO8B,EAAG,YAAY,CAACa,IAAI3C,EAAK4C,iBAAiBV,MAAM,CAAC,MAAQlC,EAAK6C,mBAAmB,MAAQ7C,EAAK4C,uBAAsB,GAAGd,EAAG,WAAW,CAACE,YAAY,oBAAoBE,MAAM,CAAC,YAAc,SAAS,KAAO,UAAUC,MAAM,CAACC,MAAOR,EAAIkB,SAAUR,SAAS,SAAUC,GAAMX,EAAIkB,SAASP,GAAKC,WAAW,aAAa,CAACV,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,SAAS,KAAO,kBAAkBa,GAAG,CAAC,MAAQnB,EAAIoB,aAAaC,KAAK,UAAU,CAACrB,EAAIK,GAAG,SAAS,IAAI,GAAGH,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,WAAW,CAACoB,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYhB,MAAOR,EAAIyB,aAAcb,WAAW,iBAAiBN,MAAM,CAAC,KAAON,EAAI0B,UAAU,OAAS,MAAM,UAAU,KAAK,aAAa,CAACC,SAAU,iBAAiB,oBAAoB,CAAE,mBAAoB,aAAc,CAACzB,EAAG,kBAAkB,CAACI,MAAM,CAAC,KAAO,WAAW,MAAQ,cAAcJ,EAAG,kBAAkB,CAACI,MAAM,CAAC,KAAO,cAAc,MAAQ,iBAAiBJ,EAAG,kBAAkB,CAACI,MAAM,CAAC,MAAQ,kBAAkB,CAACJ,EAAG,kBAAkB,CAACI,MAAM,CAAC,KAAO,gBAAgB,MAAQ,eAAesB,YAAY5B,EAAI6B,GAAG,CAAC,CAACd,IAAI,UAAUe,GAAG,UAAS,IAAEC,IAAO,MAAO,CAAC7B,EAAG,YAAY,CAAC8B,YAAY,CAAC,MAAQ,WAAW1B,MAAM,CAAC,KAAO,QAAQa,GAAG,CAAC,MAAQ,SAASc,GAAQ,OAAOjC,EAAIkC,KAAKH,MAAQ,CAAC/B,EAAIK,GAAG,IAAIL,EAAImC,GAAGJ,EAAIK,eAAe,cAAclC,EAAG,kBAAkB,CAACI,MAAM,CAAC,KAAO,UAAU,MAAQ,YAAYJ,EAAG,kBAAkB,CAACI,MAAM,CAAC,KAAO,mBAAmB,MAAQ,oBAAoBJ,EAAG,kBAAkB,CAACI,MAAM,CAAC,KAAO,eAAe,MAAQ,iBAAiB,IAAI,GAAGJ,EAAG,gBAAgB,CAACI,MAAM,CAAC,WAAa,GAAG,eAAeN,EAAIqC,SAASC,QAAQ,aAAa,CAAC,IAAI,YAAYtC,EAAIqC,SAASE,SAAS,OAAS,0CAA0C,MAAQvC,EAAIqC,SAASG,OAAOrB,GAAG,CAAC,iBAAiBnB,EAAIyC,oBAAoB,aAAazC,EAAIyC,oBAAoB,aAAazC,EAAIyC,wBAAwB,QAEjtEC,EAAkB,G,oCCqFtB,MAAMC,EAAU,EAAQ,QAET,OACfpB,QAEAqB,SAEAC,cAEAC,OACA,OACApB,aACAD,gBACAY,UACAG,QACAD,YACAD,WAEA7B,uBACAK,cACAI,cAIA6B,YAEAC,SAEAC,UACA,eAAAxC,WAAAS,GAAA,kBACA,6BACA,oBACA,iBACA,oBAGAgC,SAEAhB,QACA,mBACAiB,kBACAC,OACAtD,mCACAuD,6BACAC,qBAKA,8BACA,qBACA,WACA,0CACAC,wBAAAC,kCACA,iCACA,SACA1D,8BACAoB,uBACAsC,4BAEAD,8BAEA,eACAE,aACAC,aACAC,4BAIA,GADA,qBACA,2GACA,WAAAb,GAAA,OACA,mDACA,iCAEA,kBACA,sBACA,yBAIAc,YACAC,uBACA,+BAIApB,uBACA,wBACA,oBAGAqB,eASA,OARAhB,cACA1E,kBACA,iBACAA,4BACA2F,sBAIA,KC3L8V,I,wBCQ1VC,EAAY,eACd,EACAjE,EACA2C,GACA,EACA,KACA,WACA,MAIa,aAAAsB,E,2CCjBf,IAAInJ,EAAW,EAAQ,QACnB2B,EAAS,EAAQ,QACjByH,EAAS,EAAQ,QAErB,SAAStI,EAASuI,GACd,IACIC,EADAC,EAAc,EAGd/G,EAAM,GAEV,OAAQ8G,EACJ9G,GAAY4G,EAAOzH,EAAQ3B,EAASwE,MAAO,GAC3C8E,EAAOD,EAAU5H,KAAK+H,IAAI,GAAID,EAAc,GAC5CA,IAEJ,OAAO/G,EAGXlC,EAAOC,QAAUO,G,kCCnBjB,IAAId,EAAW,EAAQ,QAEvB,SAASyJ,EAAU5E,GACf,IAAKA,GAAoB,kBAAPA,GAAmBA,EAAG3B,OAAS,EAC7C,OAAO,EAGX,IAAIwG,EAAgB,IAAIC,OAAO,KAC7B3J,EAASwE,MAAMoF,QAAQ,uBAAwB,QACjD,KACA,OAAQF,EAAcG,KAAKhF,GAG/BvE,EAAOC,QAAUkJ,G","file":"js/chunk-66f34ea6.988be4ca.js","sourcesContent":["'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","import HttpService from './httpService';\n\nconst baseUrl = 'gene';\n\nexport default class Gene {\n  // 分页查询基因的所有列表\n  static allList(params) {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/allList`,\n      params,\n    };\n    return HttpService.request(config);\n  }\n\n  // 分页查询基因组某个基因\n  static search(params) {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/search`,\n      params,\n    };\n    return HttpService.request(config);\n  }\n\n  // 查询某基因简要信息\n  static information(params) {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/annotation/information`,\n      params,\n    };\n    return HttpService.request(config);\n  }\n\n  // 查询基因序列\n  static sequences(params) {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/annotation/sequences`,\n      params,\n    };\n    return HttpService.request(config);\n  }\n\n  // 查询基因外显子结构\n  static structure(params) {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/annotation/structure`,\n      params,\n    };\n    return HttpService.request(config);\n  }\n\n  // 查询基因注释连接\n  static annotation(params) {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/annotation/annotation`,\n      params,\n    };\n    return HttpService.request(config);\n  }\n\n  // 查询基因文章信息\n  static articles(params) {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/annotation/articles`,\n      params,\n    };\n    return HttpService.request(config);\n  }\n}\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","import HttpService from './httpService';\n\nconst baseUrl = 'genome';\n\nexport default class Genome {\n  // 基因组列表\n  static list() {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/list`,\n    };\n    return HttpService.request(config);\n  }\n\n  // 查询一个基因组详情\n  static genomeDetail(id) {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/introduction?genomeVersionID=${id}`,\n    };\n    return HttpService.request(config);\n  }\n\n  // 查询一个基因组染色体列表\n  static getGenomeChrList(id) {\n    const config = {\n      method: 'GET',\n      url: `${baseUrl}/genomeChrList`,\n      params: {\n        genomeVersionID: id,\n      },\n    };\n    return HttpService.request(config);\n  }\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=118d0fa6&prod&lang=scss&scoped=true&\"","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nmodule.exports = 0;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"marker\"},[_c('div',{staticClass:\"wrap shadow\"},[_c('div',{staticClass:\"search-wrap\"},[_c('span',[_vm._v(\"基因组： \")]),_c('el-select',{attrs:{\"filterable\":\"\",\"clearable\":\"\",\"size\":\"medium\",\"placeholder\":\"请选择\"},model:{value:(_vm.genomeID),callback:function ($$v) {_vm.genomeID=$$v},expression:\"genomeID\"}},_vm._l((_vm.genomeList),function(item){return _c('el-option',{key:item.gnome_version_id,attrs:{\"label\":item.gnome_species_name,\"value\":item.gnome_version_id}})}),1),_c('el-input',{staticClass:\"input-with-select\",attrs:{\"placeholder\":\"请输入基因名\",\"size\":\"medium\"},model:{value:(_vm.geneName),callback:function ($$v) {_vm.geneName=$$v},expression:\"geneName\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.getPageList},slot:\"append\"},[_vm._v(\"搜索\")])],1)],1),_c('div',{staticClass:\"table\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.tableLoading),expression:\"tableLoading\"}],attrs:{\"data\":_vm.tableData,\"height\":\"700\",\"row-key\":\"id\",\"tree-props\":{children: 'GeneWithGnome'},\"header-cell-style\":{ 'background-color': '#f8f8f9' }}},[_c('el-table-column',{attrs:{\"prop\":\"GeneName\",\"label\":\"GeneName\"}}),_c('el-table-column',{attrs:{\"prop\":\"GeneAllName\",\"label\":\"GeneAllName\"}}),_c('el-table-column',{attrs:{\"label\":\"GeneWithGnome\"}},[_c('el-table-column',{attrs:{\"prop\":\"gnome_gene_id\",\"label\":\"GnomeGeneId\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row }){return [_c('el-button',{staticStyle:{\"color\":\"#9B58FE\"},attrs:{\"type\":\"text\"},on:{\"click\":function($event){return _vm.jump(row)}}},[_vm._v(\" \"+_vm._s(row.gnome_gene_id)+\" \")])]}}])}),_c('el-table-column',{attrs:{\"prop\":\"gene_id\",\"label\":\"GeneId\"}}),_c('el-table-column',{attrs:{\"prop\":\"gnome_version_id\",\"label\":\"GnomeVersionId\"}}),_c('el-table-column',{attrs:{\"prop\":\"gnome_chr_id\",\"label\":\"GnomeChrId\"}})],1)],1),_c('el-pagination',{attrs:{\"background\":\"\",\"current-page\":_vm.pageInfo.pageNum,\"page-sizes\":[10],\"page-size\":_vm.pageInfo.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.pageInfo.total},on:{\"current-change\":_vm.handleCurrentChange,\"prev-click\":_vm.handleCurrentChange,\"next-click\":_vm.handleCurrentChange}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"marker\">\n    <div class=\"wrap shadow\">\n      <div class=\"search-wrap\">\n        <span>基因组： </span>\n        <el-select v-model=\"genomeID\" filterable clearable size=\"medium\" placeholder=\"请选择\">\n          <el-option\n            v-for=\"item in genomeList\"\n            :key=\"item.gnome_version_id\"\n            :label=\"item.gnome_species_name\"\n            :value=\"item.gnome_version_id\">\n          </el-option>\n        </el-select>\n        <el-input placeholder=\"请输入基因名\" size=\"medium\" v-model=\"geneName\" class=\"input-with-select\">\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getPageList\">搜索</el-button>\n        </el-input>\n      </div>\n      <div class=\"table\">\n        <el-table\n          :data=\"tableData\"\n          height=\"700\"\n          v-loading=\"tableLoading\"\n          row-key=\"id\"\n          :tree-props=\"{children: 'GeneWithGnome'}\"\n          :header-cell-style=\"{ 'background-color': '#f8f8f9' }\"\n        >\n          <el-table-column\n            prop=\"GeneName\"\n            label=\"GeneName\"\n          >\n          </el-table-column>\n          <el-table-column\n            prop=\"GeneAllName\"\n            label=\"GeneAllName\"\n          >\n          </el-table-column>\n          <el-table-column\n            label=\"GeneWithGnome\"\n          >\n            <el-table-column\n              prop=\"gnome_gene_id\"\n              label=\"GnomeGeneId\"\n            >\n              <template slot-scope=\"{ row }\">\n                <el-button @click=\"jump(row)\" type=\"text\" style=\"color: #9B58FE\">\n                  {{ row.gnome_gene_id }}\n                </el-button>\n              </template>\n            </el-table-column>\n            <el-table-column\n              prop=\"gene_id\"\n              label=\"GeneId\"\n            >\n            </el-table-column>\n            <el-table-column\n              prop=\"gnome_version_id\"\n              label=\"GnomeVersionId\"\n            >\n            </el-table-column>\n            <el-table-column\n              prop=\"gnome_chr_id\"\n              label=\"GnomeChrId\"\n            >\n            </el-table-column>\n          </el-table-column>\n        </el-table>\n        <el-pagination\n          background\n          :current-page=\"pageInfo.pageNum\"\n          :page-sizes=\"[10]\"\n          :page-size=\"pageInfo.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"pageInfo.total\"\n          @current-change=\"handleCurrentChange\"\n          @prev-click=\"handleCurrentChange\"\n          @next-click=\"handleCurrentChange\"\n        >\n        </el-pagination>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport GenomeApi from '@/api/genome';\nimport GeneApi from '@/api/gene';\n\nconst shortid = require('shortid');\n\nexport default {\n  name: '',\n\n  props: {},\n\n  components: {},\n\n  data() {\n    return {\n      tableData: [],\n      tableLoading: false,\n      pageInfo: {\n        total: 0,\n        pageSize: 10,\n        pageNum: 1,\n      },\n      genomeID: 2022021721001,\n      genomeList: [],\n      geneName: '',\n    };\n  },\n\n  computed: {},\n\n  watch: {},\n\n  mounted() {\n    const { genomeID, geneName } = this.$route.query;\n    this.genomeID = genomeID ? Number(genomeID) : '';\n    this.geneName = geneName || '';\n    this.getGenome();\n    this.getPageList();\n  },\n\n  methods: {\n    // 跳转到基因详情\n    jump(row) {\n      this.$router.push({\n        path: 'geneDetail',\n        query: {\n          genomeVersionID: row.gnome_version_id,\n          genomeGeneID: row.gnome_gene_id,\n          geneID: row.gene_id,\n        },\n      });\n    },\n    // 获取pageList\n    async getPageList() {\n      this.tableLoading = true;\n      let res = null;\n      if (this.genomeID === '' && this.geneName === '') {\n        res = await GeneApi.allList({ page: this.pageInfo.pageNum });\n      } else if (this.genomeID && this.geneName) {\n        const params = {\n          genomeVersionID: this.genomeID,\n          geneName: this.geneName,\n          page: this.pageInfo.pageNum,\n        };\n        res = await GeneApi.search(params);\n      } else {\n        this.$message({\n          type: 'error',\n          showClose: true,\n          message: '若选择基因组则必须输入基因名！',\n        });\n      }\n      this.tableLoading = false;\n      if (res?.data?.data?.GeneListOnePage) {\n        const { data } = res.data;\n        this.tableData = this.addRandomId(data.GeneListOnePage);\n        this.pageInfo.total = data.Total;\n      } else {\n        this.tableData = [];\n        this.pageInfo.total = 0;\n        this.pageInfo.pageNum = 1;\n      }\n    },\n    // 获取基因组列表\n    getGenome() {\n      GenomeApi.list().then((res) => {\n        this.genomeList = res.data.data;\n      });\n    },\n    // 当前页改变时\n    handleCurrentChange(val) {\n      this.pageInfo.pageNum = val;\n      this.getPageList();\n    },\n    // 给tableList每一项以及子项添加随机id\n    addRandomId(data) {\n      data.forEach((item) => {\n        item.id = shortid.generate();\n        if (item.GeneWithGnome) {\n          item.GeneWithGnome.forEach((child) => {\n            child.id = shortid.generate();\n          });\n        }\n      });\n      return data;\n    },\n  },\n};\n</script>\n\n<style lang='scss' scoped>\n.wrap {\n  margin: 20px 0;\n  padding: 20px;\n  height: 800px;\n\n  .search-wrap {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .el-input {\n      width: 500px;\n    }\n\n    &>div:not(:last-child) {\n      margin-right: 24px;\n    }\n  }\n\n  .table {\n    margin-top: 20px;\n\n    .el-pagination {\n      float: right;\n      margin-top: 16px;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=118d0fa6&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=118d0fa6&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"118d0fa6\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n"],"sourceRoot":""}